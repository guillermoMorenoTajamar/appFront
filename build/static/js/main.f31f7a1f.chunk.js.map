{"version":3,"sources":["reportWebVitals.js","components/toDoForm.js","components/toDoRow.js","components/todoTable.js","components/mainView.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoForm","props","useState","editItem","setToDoItem","useEffect","className","id","name","value","description","onChange","event","target","type","checked","done","onClick","createToDoCallback","cancelEditCallback","ToDoRow","toDoItem","defaultChecked","checkDoneCallback","editCallback","icon","faEdit","deleteCallback","faTrashAlt","TodoTable","loading","role","toDoItems","map","data","testData","MainView","setLoading","setToDoItems","selectedItem","setEditItem","fetch","res","json","result","error","CreateRequestOptions","verb","item","method","headers","body","JSON","stringify","createNewIten","requestOptions","response","updateIten","element","filter","tempItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f31f7a1f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nexport default function TodoForm(props) {\r\n  const [editItem, setToDoItem] = useState(props.editItem);\r\n\r\n  useEffect(() => {\r\n    setToDoItem(props.editItem);\r\n  }, [props])\r\n\r\n  const clearForm = () => {\r\n    props.cancelEditCallback();\r\n  }\r\n\r\n  const drawForm = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header text-center\">\r\n          {editItem.id === -1 ? \"New\" : \"Edit\" } To Do\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form>\r\n            <div className=\"form-group\">\r\n              <label>Descripcion</label>\r\n              <input\r\n                name=\"description\"\r\n                className=\"form-control\"\r\n                value={editItem.description}\r\n                onChange={(event) => {\r\n                  setToDoItem({ ...editItem, description: event.target.value })\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                name=\"done\"\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                checked={editItem.done}\r\n                onChange={(event) => {\r\n                  setToDoItem({ ...editItem, done: !editItem.done })\r\n                }}\r\n              />\r\n              <label>Done</label>\r\n            </div>\r\n\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary\"\r\n              onClick={() => {\r\n                props.createToDoCallback({\r\n                  id: editItem.id,\r\n                  description: editItem.description,\r\n                  done: editItem.done\r\n                });\r\n              }}\r\n            >\r\n             {editItem.id === -1 ? \"Create\" : \"Save\" }\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary m-1\"\r\n              onClick={() => { clearForm() }}\r\n            >\r\n              Cancel\r\n            </button>\r\n\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return drawForm();\r\n}","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function ToDoRow(props) {\r\n  return (\r\n    <tr>\r\n      <td>{props.toDoItem.description}</td>\r\n      <td>\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={props.toDoItem.done}\r\n          onChange={() => { props.checkDoneCallback(props.toDoItem.id) }}\r\n        />\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-primary\"\r\n          onClick={() => { props.editCallback(props.toDoItem.id) }}\r\n        >\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n      </td>\r\n      <td>\r\n        <button\r\n          className=\"btn btn-danger\"\r\n          onClick={() => { props.deleteCallback(props.toDoItem.id) }}\r\n        >\r\n          <FontAwesomeIcon icon={faTrashAlt} />\r\n        </button>\r\n      </td>\r\n\r\n    </tr>\r\n  )\r\n}","import React from 'react';\r\nimport ToDoRow from \"./toDoRow\";\r\n\r\nexport default function TodoTable(props) {\r\n\r\n  const drawLoading = () => {\r\n    return (\r\n      <div>\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Description</th>\r\n              <th>Done</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"text-center\">\r\n          <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const drawTable = () => {\r\n    return (\r\n      <div className=\"card\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Description</th>\r\n              <th>Done</th>\r\n              <th>Edit</th>\r\n              <th>Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              props.toDoItems.map(data =>\r\n                <ToDoRow\r\n                  key={data.id}\r\n                  toDoItem={data}\r\n                  deleteCallback={props.deleteCallback}\r\n                  checkDoneCallback={props.checkDoneCallback}\r\n                  editCallback={props.editCallback}\r\n                />\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (props.loading) return drawLoading();\r\n  return drawTable();\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport TodoForm from './toDoForm';\r\nimport TodoTable from './todoTable';\r\n\r\nconst testData = [\r\n  { id: 1, description: \"Item 1\", done: true },\r\n  { id: 2, description: \"Item 2\", done: false },\r\n  { id: 3, description: \"Item 3\", done: false },\r\n]\r\n\r\nexport default function MainView(props) {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const [toDoItems, setToDoItems] = useState(testData);\r\n  const [selectedItem, setEditItem] = useState({ id: -1, description: \"\", done: false });\r\n\r\n  //const serverUrl = \"http://todo-app-server.azurewebsites.net/Todoitem\";\r\n  \r\n  useEffect(() => {\r\n    fetch('http://todo-app-server.azurewebsites.net/Todoitem')\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          setToDoItems(result);\r\n          setLoading(false);\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          //setIsLoaded(true);\r\n          //setError(error);\r\n        }\r\n      )\r\n  }, [])\r\n\r\n  const CreateRequestOptions = (verb, item) => {\r\n    return {\r\n      method: verb,\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(item)\r\n    }\r\n  }\r\n\r\n  const deleteItem = (id) => {\r\n\r\n    const requestOptions = CreateRequestOptions('DELETE');\r\n\r\n    fetch(\"http://todo-app-server.azurewebsites.net/Todoitem/\" + id, requestOptions)\r\n      .then(() => {\r\n        setToDoItems(toDoItems.filter(item => item.id !== id))\r\n      });\r\n  }\r\n\r\n  const checkDoneCallback = (id) => {\r\n    if (loading)\r\n      return;\r\n\r\n    let tempItem = toDoItems.filter(item => item.id === id)[0];\r\n    tempItem.done = !tempItem.done;\r\n\r\n    const requestOptions = CreateRequestOptions('PUT', tempItem);\r\n\r\n    fetch(\"http://todo-app-server.azurewebsites.net/Todoitem/\" + id, requestOptions)\r\n      .then(() => {\r\n        setToDoItems(toDoItems.map(item => item.id === id ? tempItem : item))\r\n      });\r\n  }\r\n\r\n  const editItem = (id) => {\r\n    let item = toDoItems.filter(item => item.id === id)[0]\r\n    if (item !== null) {\r\n      setEditItem(item);\r\n    }\r\n  }\r\n\r\n  const cancelEdit = () => {\r\n    setEditItem({ id: -1, description: \"\", done: false });\r\n  }\r\n\r\n  const saveEditItem = (item) => {\r\n    if (selectedItem.id === -1)\r\n      createNewIten(item);\r\n    else\r\n      updateIten(item);\r\n  }\r\n\r\n  const createNewIten = (item) => {\r\n    const requestOptions = CreateRequestOptions('POST', item);\r\n    fetch(\"http://todo-app-server.azurewebsites.net/Todoitem\", requestOptions)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        item.id = data.id;\r\n        setToDoItems([...toDoItems, item])\r\n      });\r\n  }\r\n\r\n  const updateIten = (item) => {\r\n    const requestOptions = CreateRequestOptions('PUT', item);\r\n    fetch(\"http://todo-app-server.azurewebsites.net/Todoitem/\" + item.id, requestOptions)\r\n      .then(() => {\r\n        setToDoItems(toDoItems.map((element) => {\r\n          return (element.id === item.id) ? item : element;\r\n        }))\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center\">To Do App</h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <TodoTable\r\n            loading={loading}\r\n            deleteCallback={deleteItem}\r\n            checkDoneCallback={checkDoneCallback}\r\n            editCallback={editItem}\r\n            toDoItems={toDoItems}\r\n          />\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <TodoForm\r\n            editItem={selectedItem}\r\n            createToDoCallback={saveEditItem}\r\n            cancelEditCallback={cancelEdit}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MainView from './components/mainView'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainView></MainView>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}